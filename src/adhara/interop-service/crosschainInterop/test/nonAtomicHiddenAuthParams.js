const { GetProof } = require('eth-proof')
const ta = require('truffle-assertions');
const {v4: uuidv4} = require("uuid");


const CrosschainFunctionCall = artifacts.require('CrosschainFunctionCall');
const CrosschainMessaging = artifacts.require('CrosschainMessaging');
const XvP = artifacts.require('XvP');
const Token = artifacts.require('Token');

const config = {
  logLevel: 'debug'
}
const Logger = require('../src/CrosschainSDKUtils/logger.js')
const ethers = require("ethers");
const ethJsUtil = require("ethereumjs-util");
const logger = Logger(config, {})
const crosschainMessagingSDK = require('../src/CrosschainMessagingSDK')(config, { logger })

const random = function () { return Math.floor(Math.random() * (999 - 100 + 1) + 100) }
let del = null, pay = null, ptc = null, dtc = null, pfc = null, dfc = null, pmc = null, dmc = null;
let fc = 0, sc = 1;

contract('NonAtomicHiddenAuthParams', async accounts => {
  let web3ProviderUrl = web3.currentProvider.host
  if (!web3ProviderUrl) {
    web3ProviderUrl = 'http://127.0.0.1:8545'
  }
  const ethProof = new GetProof(web3ProviderUrl)

  beforeEach(async () => {
    pay = await XvP.new(); // Payment
    ptc = await Token.new(); // Payment token contract
    pmc = await CrosschainMessaging.new(); // Payment messaging contract
    pfc = await CrosschainFunctionCall.new(); // Payment function call contract
    let result = null;
    // Payment notaries
    result = await pay.setTokenContractAddress(ptc.address)
    assert.equal(result.receipt.status, true)
    result = await ptc.addHoldNotary('N-123', pay.address)
    assert.equal(result.receipt.status, true)
    result = await pay.setNotaryId('N-123')
    assert.equal(result.receipt.status, true)
    // Payment interop
    result = await pfc.setMessagingContractAddress(pmc.address)
    assert.equal(result.receipt.status, true)
    result = await pay.setFunctionCallContractAddress(pfc.address)
    assert.equal(result.receipt.status, true)
    // Payment schemes
    const firstDecodingScheme = await pfc.CordaTransactionDecodingSchemeId();
    result = await pfc.onboardEventDecodingScheme(fc, firstDecodingScheme)
    assert.equal(result.receipt.status, true)
    const firstProvingScheme = await pmc.CordaTransactionProvingSchemeId();
    result = await pmc.onboardProvingScheme(fc, firstProvingScheme)
    assert.equal(result.receipt.status, true)
    result = await pmc.addParticipant(fc, '0x04473F5846E9C090BC82D80C3B0F01E7058E21684C1967D71D3A338120A32B4C');
    assert.equal(result.receipt.status, true)
    result = await pmc.addParticipant(fc, '0x2E7F70B8A6499C1DE28DF983A882E057BF8AEECE0F677E402B6A128A615B3D11');
    assert.equal(result.receipt.status, true)
    result = await pmc.addNotary(fc, '0xC98D06DEEFF77BAA9339C709818F3AB9313740EE39CC6193E341C687DFA38CF4');
    assert.equal(result.receipt.status, true)
    const functionPrototype = 'requestFollowLeg(string,string,string,address,uint256,uint256)'
    const functionSignature = web3.eth.abi.encodeFunctionSignature(functionPrototype);
    const functionCommand = 'net.corda.samples.example.contracts.DCRContract$Commands$Earmark'
    result = await pmc.setParameterHandlers(fc, functionSignature, functionPrototype, functionCommand, [{
      'fingerprint': 'net.corda:DldW9yS4tBOze6qv6U4QTA==',
      'componentIndex': '0x00',
      'describedSize': '0x08',
      'describedType': 'String',
      'describedPath': '0x06',
      'solidityType': 'string',
      'calldataPath': '0x00',
      'parser': 'PathParser',
    }, {
      'fingerprint': 'net.corda:ngdwbt6kRT0l5nn16uf87A==',
      'componentIndex': '0x01',
      'describedSize': '0x06',
      'describedType': 'String',
      'describedPath': '0x00',
      'solidityType': 'string',
      'calldataPath': '0x01',
      'parser': 'PartyParser',
    }, {
      'fingerprint': 'net.corda:ngdwbt6kRT0l5nn16uf87A==',
      'componentIndex': '0x00',
      'describedSize': '0x06',
      'describedType': 'String',
      'describedPath': '0x00',
      'solidityType': 'string',
      'calldataPath': '0x02',
      'parser': 'PartyParser',
    }, {
      'fingerprint': '',
      'componentIndex': '0x00',
      'describedSize': '0x00',
      'describedType': '',
      'describedPath': '0x00',
      'solidityType': 'address',
      'calldataPath': '0x03',
      'parser': 'NoParser',
    }, {
      'fingerprint': '',
      'componentIndex': '0x00',
      'describedSize': '0x00',
      'describedType': '',
      'describedPath': '0x00',
      'solidityType': 'uint256',
      'calldataPath': '0x04',
      'parser': 'NoParser',
    }, {
      'fingerprint': 'net.corda:DldW9yS4tBOze6qv6U4QTA==',
      'componentIndex': '0x00',
      'describedSize': '0x08',
      'describedType': 'String',
      'describedPath': '0x07',
      'solidityType': 'uint256',
      'calldataPath': '0x05',
      'parser': 'PathParser',
    }]);
    assert.equal(result.receipt.status, true)
    const secondDecodingScheme = await pfc.EthereumEventLogDecodingSchemeId();
    result = await pfc.onboardEventDecodingScheme(sc, secondDecodingScheme)
    assert.equal(result.receipt.status, true)
    const secondProvingScheme = await pmc.EthereumBlockHeaderProvingSchemeId();
    result = await pmc.onboardProvingScheme(sc, secondProvingScheme)
    assert.equal(result.receipt.status, true)

    const bmd = ({ // Mint details
      operationId: 'M-' + random(),
      toAccount: 'Bob',
      amount: 10000000,
      metaData: ''
    })
    let bmint = await ptc.create(bmd.operationId, bmd.toAccount, bmd.amount, bmd.metaData)
    assert.equal(bmint.receipt.status, true)

    // Onboard the validators
    // TODO: Not supported by HD hooked wallet!
    // let validatorResponse
    // await web3.currentProvider.send({"jsonrpc":"2.0","method":"ibft_getValidatorsByBlockNumber","params":["latest"], "id":1}, function (err, response) {
    //   if (!err) {
    //     validatorResponse = response;
    //   } else {
    //     console.log(err);
    //     return Promise.reject(Error("No response when attempting to get validator list from current provider"))
    //   }
    // })
    // console.log({validatorResponse})
    // if (!validatorResponse) {
    //   return Promise.reject(Error("No response from getting validator list from " + web3ProviderUrl))
    // }
    // const validatorResponseJSON = await validatorResponse.json()
    // if (!validatorResponseJSON) {
    //   return Promise.reject(Error("Could not get JSON from validator response: " + validatorResponse))
    // }
    // const validatorList = validatorResponseJSON.result
    const validatorList = ['0xca31306798b41bc81c43094a1e0462890ce7a673']
    // if (!validatorList || validatorList.length === 0) {
    //   return Promise.reject(Error("Could not get list of validators, or list is empty"))
    // }
    await pmc.setValidatorList(sc, 5, validatorList)
  })

  it('should be able to set the networkId', async () => {
    let result = await pfc.setLocalNetworkId(sc)
    assert.equal(result.receipt.status, true)
  })

  it('should be able to get the networkId', async () => {
    let result = await pfc.setLocalNetworkId(sc)
    assert.equal(result.receipt.status, true)
    result = (await pfc.getLocalNetworkId.call()).toNumber();
    assert.equal(result, sc)
  })

  it('should be able to append authentication parameters', async () => {
    let result = await pfc.setAppendAuthParams(true)
    assert.equal(result.receipt.status, true)
  })

  it('should be able to add authentication parameters', async () => {
    const sourceNetworkId = sc
    let result = await pfc.addAuthParams(sourceNetworkId, accounts[0])
    assert.equal(result.receipt.status, true)
    result = await pfc.isAuthParams(sourceNetworkId, accounts[0])
    assert.equal(result, true)
  })

  it('should be able to remove authentication parameters', async () => {
    const sourceNetworkId = sc
    let result = await pfc.addAuthParams(sourceNetworkId, accounts[0])
    assert.equal(result.receipt.status, true)
    result = await pfc.removeAuthParams(sourceNetworkId, accounts[0])
    assert.equal(result.receipt.status, true)
    result = await pfc.isAuthParams(sourceNetworkId, accounts[0])
    assert.equal(result, false)
  })

  it('should be able to verify authentication parameters', async () => {
    const sourceNetworkId = sc
    let result = await pfc.addAuthParams(sourceNetworkId, accounts[0])
    assert.equal(result.receipt.status, true)
    result = await pfc.isAuthParams(sourceNetworkId, accounts[0])
    assert.equal(result, true)
    result = await pfc.isAuthParams(sourceNetworkId, accounts[1])
    assert.equal(result, false)
  })

  it('should be able to update authentication parameters', async () => {
    const sourceNetworkId = sc
    let result = await pfc.addAuthParams(sourceNetworkId, accounts[0])
    assert.equal(result.receipt.status, true)
    result = await pfc.isAuthParams(sourceNetworkId, accounts[0])
    assert.equal(result, true)
    result = await pfc.addAuthParams(sourceNetworkId, accounts[1])
    assert.equal(result.receipt.status, true)
    result = await pfc.isAuthParams(sourceNetworkId, accounts[1])
    assert.equal(result, true)
  })

  it('should be able to perform call from remote chain with verifiable hidden authentication parameters', async () => {
    // Emit cross blockchain call
    await pfc.setLocalNetworkId(sc)
    const block = {
      "number": 339,
      "hash": "0xaeaf4602293749f04e1adc44b34df0be3edfd3943931aae9f16ee0e4f2b14b6e",
      "mixHash": "0x63746963616c2062797a616e74696e65206661756c7420746f6c6572616e6365",
      "parentHash": "0xbb65d0b95cb79204dd5b69fbd4f673dd1f2d0877fe4d9d59d8d3064d0ad1b100",
      "nonce": "0x0000000000000000",
      "sha3Uncles": "0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347",
      "logsBloom": "0x
      "transactionsRoot": "0xbfd036025e0ea63b91934e5565604759733f5bedd907764d7e0ed7ca3a1e457c",
      "stateRoot": "0x17821e0ec2987edc1fb5652d84a93de576a67304057042feeeb4fbcf49e0dc6a",
      "receiptsRoot": "0xae5f8ace3713cf9a541d736150ccac320840944d756b845cfd06ad3a50c08961",
      "miner": "0xCA31306798B41BC81C43094a1E0462890Ce7a673",
      "difficulty": "1",
      "totalDifficulty": "340",
      "extraData": "0xf869a00000000000000000000000000000000000000000000000000000000000000000c0c080f843b841f5894ddcc20a58973d0cf2168a07e73364ef738e4c03304105a75f784f161e5e56c4a271cdf22502e9d36383109d23a163e9a50b1ef150e5f8a2629191913ce001",
      "size": 4924,
      "gasLimit": 100000000,
      "gasUsed": 378417,
      "timestamp": 1716815905,
      "uncles": [],
      "transactions": [
        "0xe4a8803bbf920d1273a86496f47cf7f455db0c2b891f35fd036056508b490c90"
      ]
    }
    const txProof = {
      "path": "0x0",
      "rlpEncodedReceipt": "",
      "witness": ""
    }
    // Performing call from remote chain [2] on chain [1] with tradeId [b0d7df8c] and functionName [completeLeadLeg]
    const blockHeaderObj = crosschainMessagingSDK.getBlockHeaderObjFromBlock('qbft', block)

    let decodedRlpEncodedReceipt = ethers.utils.RLP.decode(txProof.rlpEncodedReceipt);
    let logs = decodedRlpEncodedReceipt[3]
    const eventSig = ethers.utils.keccak256(ethers.utils.toUtf8Bytes('RemoteFunctionCall(uint256,address,bytes)'))
    let eventLog
    for (let log of logs){
      if (log[1][0] === eventSig){
        eventLog = log[2]
        break
      }
    }
    await pfc.setAppendAuthParams(true)
    await pfc.addAuthParams(2, '0xac3a5E96E4a09b6613273aca6649f453f9425712')
    let validatorSignatures = ethers.utils.RLP.decode(blockHeaderObj.rlpValidatorSignatures)
    const signatures = []
    for (let i = 0; i < validatorSignatures.length; i++) {
      let res = ethJsUtil.fromRpcSig(validatorSignatures[i])
      let publicKey = ethJsUtil.ecrecover(ethJsUtil.toBuffer(ethers.utils.keccak256(blockHeaderObj.rlpBlockHeaderPreimage)), res.v, res.r, res.s);
      let address = ethJsUtil.pubToAddress(publicKey).toString("hex");
      let signature = {
        by: '0x'+address,
        sigR: '0x'+ res.r.toString('hex'),
        sigS: '0x' + res.s.toString('hex'),
        sigV: '0x000000000000000000000000000000000000000000000000000000000000000'+(res.v-27),
        meta: '0x'
      }
      signatures.push(signature);
    }
    const eventData = web3.eth.abi.encodeParameters([ ethEventDataStruct ], [
      {
        index: 0x1,
        signature: web3.utils.soliditySha3('RemoteFunctionCall(uint256,address,bytes)'),
        logs: txProof.rlpEncodedReceipt
      }
    ])
    const blockHeaderMeta = web3.eth.abi.encodeParameters([ ethBlockHeaderMetaStruct ], [
      {
        rlpBlockHeader: blockHeaderObj.rlpBlockHeaderExcludingSeals,
        rlpBlockHeaderPreimage: blockHeaderObj.rlpBlockHeaderPreimage
      }
    ])
    const encodedInfo = web3.eth.abi.encodeParameters(['uint256', 'address', 'bytes'], [0, '0x0000000000000000000000000000000000000000', eventData])
    const encodedProof = web3.eth.abi.encodeParameters([ ethEncodedProofStruct ], [
      {
        typ: 0,
        ProofData: {
          witnesses: txProof.witness,
          root: block.receiptsRoot,
          blockHash: block.hash,
          blockHeaderMeta: blockHeaderMeta,
        },
        Signature: signatures
      }
    ])
    const result = await pfc.inboundCall(sc, encodedInfo, encodedProof, { gas: 20000000 })
    assert.equal(result.receipt.status, true)
  })

  it('should not be able to perform call from remote chain with unverifiable hidden authentication parameters', async () => {
    // Emit cross blockchain call
    const block = {
      "number": 339,
      "hash": "0xaeaf4602293749f04e1adc44b34df0be3edfd3943931aae9f16ee0e4f2b14b6e",
      "mixHash": "0x63746963616c2062797a616e74696e65206661756c7420746f6c6572616e6365",
      "parentHash": "0xbb65d0b95cb79204dd5b69fbd4f673dd1f2d0877fe4d9d59d8d3064d0ad1b100",
      "nonce": "0x0000000000000000",
      "sha3Uncles": "0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347",
      "logsBloom": "0x
      "transactionsRoot": "0xbfd036025e0ea63b91934e5565604759733f5bedd907764d7e0ed7ca3a1e457c",
      "stateRoot": "0x17821e0ec2987edc1fb5652d84a93de576a67304057042feeeb4fbcf49e0dc6a",
      "receiptsRoot": "0xae5f8ace3713cf9a541d736150ccac320840944d756b845cfd06ad3a50c08961",
      "miner": "0xCA31306798B41BC81C43094a1E0462890Ce7a673",
      "difficulty": "1",
      "totalDifficulty": "340",
      "extraData": "0xf869a00000000000000000000000000000000000000000000000000000000000000000c0c080f843b841f5894ddcc20a58973d0cf2168a07e73364ef738e4c03304105a75f784f161e5e56c4a271cdf22502e9d36383109d23a163e9a50b1ef150e5f8a2629191913ce001",
      "size": 4924,
      "gasLimit": 100000000,
      "gasUsed": 378417,
      "timestamp": 1716815905,
      "uncles": [],
      "transactions": [
        "0xe4a8803bbf920d1273a86496f47cf7f455db0c2b891f35fd036056508b490c90"
      ]
    }
    const txProof = {
      "path": "0x0",
      "rlpEncodedReceipt": "0xf914a0018305c631bf91395f8b99457f1defacaafaa664bbb0f4f3347b786d874a25ce1a0f0e25c63981e9a617375c8244c8ac144e4e520acc2cb08e2d4c3781b1a02c067b8800000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000004062373861313837346638616136666566383239346439616362316163633731633762316265663964636263333261613538336165656165386632333964323737f9023a94c13141df25ac03eb6e249ab4319f61d2be3d4254e1a08369ab70f92dced90f80b7c18870fbacd98e2d8d35666f4b0a99008ce06c1e25b90200000000000000000000000000000000000000000000000000000000000000000100000000000000000000000037bcb3cac66f4d859a4ef77dcd97eec146bbc425000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000001788903901f000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000271000000000000000000000000000000000000000000000000000000000000000086230643764663863000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b4854474247423030555344000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b48545553555330305553440000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002ac3a5e96e4a09b6613273aca6649f453f94257120000000000000000f9109a94c13141df25ac03eb6e249ab4319f61d2be3d4254e1a0779de256df6a6ab97f8f5ad813eda0a54aae5a8097337e3e2f54858eaa766d4bb9106000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000054000000000000000000000000000000000000000000000000000000000000004c00000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000440000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000008369ab70f92dced90f80b7c18870fbacd98e2d8d35666f4b0a99008ce06c1e250000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000038bf903880183012b0fbf9027df9027a94764b29d5b807fe725b2607007b230a1eb53bfca9e1a08369ab70f92dced90f80b7c18870fbacd98e2d8d35666f4b0a99008ce06c1e25b902400000000000000000000000000000000000000000000000000000000000000002000000000000000000000000ac3a5e96e4a09b6613273aca6649f453f9425712000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000001b8c6755b7c00000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000014000000000000000000000000037bcb3cac66f4d859a4ef77dcd97eec146bbc4250000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000271000000000000000000000000000000000000000000000000000000000000000086230643764663863000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b4854555355533030474250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b4854474247423030474250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000137bcb3cac66f4d859a4ef77dcd97eec146bbc42500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b0000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000009e0000000000000000000000000000000000000000000000000000000000000008005f6390f08a2051740fd5111ed20b7a801c5165dad4c054419c500d926ac4593c72f215fad3e220fee27365feee228bb3d4fa2881b9f19575beec7bef593911b00000000000000000000000000000000000000000000000000000000000004400000000000000000000000000000000000000000000000000000000000000397f90394f90391822080b9038bf903880183012b0fbf9027df9027a94764b29d5b807fe725b2607007b230a1eb53bfca9e1a08369ab70f92dced90f80b7c18870fbacd98e2d8d35666f4b0a99008ce06c1e25b902400000000000000000000000000000000000000000000000000000000000000002000000000000000000000000ac3a5e96e4a09b6613273aca6649f453f9425712000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000001b8c6755b7c00000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000014000000000000000000000000037bcb3cac66f4d859a4ef77dcd97eec146bbc4250000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000271000000000000000000000000000000000000000000000000000000000000000086230643764663863000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b4854555355533030474250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b4854474247423030474250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000137bcb3cac66f4d859a4ef77dcd97eec146bbc425000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005200000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000002a00000000000000000000000000000000000000000000000000000000000000222f9021fa01fe899b9d02edf188135b2e507e017263439bdd92ea6e047ff59e274052e9b74a01dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d4934794ca31306798b41bc81c43094a1e0462890ce7a673a0042ca334897bec3c41037bcdf28bd80b2ccb0942f41aaf13fd0a49f04f1be84da0f5f6787903aababbd264f11506b9bb5dfe620ff0ef09f46d15410be9f585e784a005f6390f08a2051740fd5111ed20b7a801c5165dad4c054419c500d926ac4593bf5e10083012b0f846654881fa5e4a00000000000000000000000000000000000000000000000000000000000000000c0c080a063746963616c2062797a616e74696e65206661756c7420746f6c6572616e63658800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000223f90220a01fe899b9d02edf188135b2e507e017263439bdd92ea6e047ff59e274052e9b74a01dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d4934794ca31306798b41bc81c43094a1e0462890ce7a673a0042ca334897bec3c41037bcdf28bd80b2ccb0942f41aaf13fd0a49f04f1be84da0f5f6787903aababbd264f11506b9bb5dfe620ff0ef09f46d15410be9f585e784a005f6390f08a2051740fd5111ed20b7a801c5165dad4c054419c500d926ac4593bf5e10083012b0f846654881fa6e5a00000000000000000000000000000000000000000000000000000000000000000c0c080c0a063746963616c2062797a616e74696e65206661756c7420746f6c6572616e6365880000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000020000000000000000000000000ca31306798b41bc81c43094a1e0462890ce7a67312bbfc183d4e7ba6b57c201428259bc1c70bc0ea61a1ff042bcae540efd312db7af94263b85accc76a4c10e73de5e7e5c4d0e73acb72882bb06aee0ef0d6b9fb000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000000",
      "witness": ""
    }
    const blockHeaderObj = crosschainMessagingSDK.getBlockHeaderObjFromBlock('qbft', block)
    await pfc.setAppendAuthParams(true)
    await pfc.addAuthParams(1, '0xac3a5E96E4a09b6613273aca6649f453f9425712')
    let validatorSignatures = ethers.utils.RLP.decode(blockHeaderObj.rlpValidatorSignatures)
    const signatures = []
    for (let i = 0; i < validatorSignatures.length; i++) {
      let res = ethJsUtil.fromRpcSig(validatorSignatures[i])
      let publicKey = ethJsUtil.ecrecover(ethJsUtil.toBuffer(ethers.utils.keccak256(blockHeaderObj.rlpBlockHeaderPreimage)), res.v, res.r, res.s);
      let address = ethJsUtil.pubToAddress(publicKey).toString("hex");
      let signature = {
        by: '0x'+address,
        sigR: '0x'+ res.r.toString('hex'),
        sigS: '0x' + res.s.toString('hex'),
        sigV: '0x000000000000000000000000000000000000000000000000000000000000000'+(res.v-27),
        meta: '0x'
      }
      signatures.push(signature);
    }
    const eventData = web3.eth.abi.encodeParameters([ ethEventDataStruct ], [
      {
        index: 0x1,
        signature: web3.utils.soliditySha3('RemoteFunctionCall(uint256,address,bytes)'),
        logs: txProof.rlpEncodedReceipt
      }
    ])
    const blockHeaderMeta = web3.eth.abi.encodeParameters([ ethBlockHeaderMetaStruct ], [
      {
        rlpBlockHeader: blockHeaderObj.rlpBlockHeaderExcludingSeals,
        rlpBlockHeaderPreimage: blockHeaderObj.rlpBlockHeaderPreimage
      }
    ])
    const encodedInfo = web3.eth.abi.encodeParameters(['uint256', 'address', 'bytes'], [0, '0x0000000000000000000000000000000000000000', eventData])
    const encodedProof = web3.eth.abi.encodeParameters([ ethEncodedProofStruct ], [
      {
        typ: 0,
        ProofData: {
          witnesses: txProof.witness,
          root: block.receiptsRoot,
          blockHash: block.hash,
          blockHeaderMeta: blockHeaderMeta,
        },
        Signature: signatures
      }
    ])
    // Revert
    try {
      await ta.reverts(await pfc.inboundCall(sc, encodedInfo, encodedProof, { gas: 20000000 }), 'Verification of authentication parameters failed');
    } catch (err) {
      //console.log({err})
    }
  })
})

const ethEventDataStruct = {
  EventData: {
    index: 'uint256',
    signature: 'bytes32',
    logs: 'bytes',
  },
}

const ethBlockHeaderMetaStruct = {
  BlockHeaderMeta: {
    rlpBlockHeader: 'bytes',
    rlpBlockHeaderPreimage: 'bytes'
  }
}

const ethEncodedProofStruct = {
  Proof: {
    typ: 'uint256',
    ProofData: {
      witnesses: 'bytes',
      root: 'bytes32',
      blockHash: 'bytes32',
      blockHeaderMeta: 'bytes',
    },
    'Signature[]': {
      by: 'uint256',
      sigR: 'uint256',
      sigS: 'uint256',
      sigV: 'uint256',
      meta: 'bytes',
    }
  }
}
