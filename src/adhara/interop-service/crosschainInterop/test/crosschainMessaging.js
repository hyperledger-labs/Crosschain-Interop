const CrosschainMessaging = artifacts.require("CrosschainMessaging");
const ta = require('truffle-assertions');
const {v4: uuidv4} = require("uuid");
const opId = function () { return uuidv4().substring(0,16) }

contract("CrosschainMessaging", async accounts => {
  let instance = null

  beforeEach(async () => {
    instance = await CrosschainMessaging.new()
  })

  it("should be able to set the validator list", async () => {
    const chainId = 1
    const validatorList = ['0xca31306798b41bc81c43094a1e0462890ce7a673']
    await instance.setValidatorList(chainId, opId(), validatorList)

    const validator = (await instance.chainHeadValidators(chainId, 0)).toLowerCase()
    assert.equal(validator, validatorList[0])
  })

  it("should be able to set the validator list to multiple validators", async () => {
    const chainId = 1
    const validatorList = ['0xca31306798b41bc81c43094a1e0462890ce7a673', '0x049eb617fba599e3d455da70c6730abc8cc4221d', '0x06c3f482f18711be95adf106afa25cd13897fbe7']
    await instance.setValidatorList(chainId, opId(), validatorList)

    for(let index in validatorList){
      const validator = (await instance.chainHeadValidators(chainId, index)).toLowerCase()
      assert.equal(validator, validatorList[index])
    }
    await ta.reverts(instance.chainHeadValidators(chainId, validatorList.length), "Execution reverted")
  })

  it("should be able to increase the number of validators", async () => {
    const chainId = 1
    const validatorList0 = ['0xca31306798b41bc81c43094a1e0462890ce7a673']
    const validatorList1 = ['0xca31306798b41bc81c43094a1e0462890ce7a673', '0x049eb617fba599e3d455da70c6730abc8cc4221d', '0x06c3f482f18711be95adf106afa25cd13897fbe7']

    await instance.setValidatorList(chainId, opId(), validatorList0)
    for(let index in validatorList0){
      const validator = (await instance.chainHeadValidators(chainId, index)).toLowerCase()
      assert.equal(validator, validatorList0[index])
    }
    await ta.reverts(instance.chainHeadValidators(chainId, validatorList0.length), "Execution reverted")

    await instance.setValidatorList(chainId, opId(), validatorList1)
    for(let index in validatorList1){
      const validator = (await instance.chainHeadValidators(chainId, index)).toLowerCase()
      assert.equal(validator, validatorList1[index])
    }
    await ta.reverts(instance.chainHeadValidators(chainId, validatorList1.length), "Execution reverted")
  })

  it("should be able to increase and then decrease the number of validators", async () => {
    const chainId = 1
    const validatorList0 = ['0xca31306798b41bc81c43094a1e0462890ce7a673']
    const validatorList1 = ['0xca31306798b41bc81c43094a1e0462890ce7a673', '0x049eb617fba599e3d455da70c6730abc8cc4221d', '0x06c3f482f18711be95adf106afa25cd13897fbe7']
    const validatorList2 = ['0x049eb617fba599e3d455da70c6730abc8cc4221d']

    await instance.setValidatorList(chainId, opId(), validatorList0)
    for(let index in validatorList0){
      const validator = (await instance.chainHeadValidators(chainId, index)).toLowerCase()
      assert.equal(validator, validatorList0[index])
    }
    await ta.reverts(instance.chainHeadValidators(chainId, validatorList0.length), "Execution reverted")

    await instance.setValidatorList(chainId, opId(), validatorList1)
    for(let index in validatorList1){
      const validator = (await instance.chainHeadValidators(chainId, index)).toLowerCase()
      assert.equal(validator, validatorList1[index])
    }
    await ta.reverts(instance.chainHeadValidators(chainId, validatorList1.length), "Execution reverted")

    await instance.setValidatorList(chainId, opId(), validatorList2)
    for(let index in validatorList2){
      const validator = (await instance.chainHeadValidators(chainId, index)).toLowerCase()
      assert.equal(validator, validatorList2[index])
    }
    await ta.reverts(instance.chainHeadValidators(chainId, validatorList2.length), "Execution reverted")
  })

  it("should be able to decode encodedInfo and signatureOrProof", async () => {
    const encodedInfo = web3.eth.abi.encodeParameters(
      ['uint256', 'address', 'bytes32', 'bytes'],
      [0, '0x0000000000000000000000000000000000000000', '0x1234', '0x2345']
    )

    const blockHash = blockHash_hex
    const rlpBlockHeader = Buffer.from(rlpBlockHeader_Base64, 'base64')
    const rlpBlockHeaderExcludingRound = Buffer.from(rlpBlockHeaderExcludingRound_Base64, 'base64')
    const rlpValidatorSignatures = rlpValidatorSignatures_hex

    const signatureOrProof = web3.eth.abi.encodeParameters(
      ['bytes', 'bytes32', 'bytes32', 'bytes', 'bytes', 'bytes'],
      ['0x3456', '0x4567', blockHash, rlpBlockHeader, rlpBlockHeaderExcludingRound, rlpValidatorSignatures]
    )
    const result = await instance.decodeBlockHeaderTransferEventAndProof(encodedInfo, signatureOrProof)

    assert.equal(result.value, '0x2345')
    assert.equal(result.rlpSiblingNodes, '0x3456')
    assert.equal(result.receiptsRoot, '0x4567000000000000000000000000000000000000000000000000000000000000')
    assert.equal(result.blockHash, blockHash)
    assert.equal(result.rlpBlockHeader, '0x'+rlpBlockHeader.toString('hex'))
    assert.equal(result.rlpBlockHeaderExcludingRound, '0x'+rlpBlockHeaderExcludingRound.toString('hex'))
    assert.equal(result.rlpValidatorSignatures, rlpValidatorSignatures)
  })

  it("should be able to verifyEVMEvent", async () => {

    const eventData = rlpEncodedReceipt_hex
    const rlpSiblingNodes = rlpSiblingNodes_hex
    const receiptsRoot = receiptsRoot_hex

    const result = await instance.verifyEVMEvent(eventData, rlpSiblingNodes, receiptsRoot)

    assert.equal(result, true)
  })

  it("should be able to verifyBFTBlockHeader", async () => {

    const chainId = 1
    const validatorList = ['0xca31306798b41bc81c43094a1e0462890ce7a673']
    await instance.setValidatorList(chainId, opId(), validatorList)
    let testData = [
      { // QBFT Block header validator selection
        blockHash:                          '0xd10ec91e84ef400f1a0f248c6563bdec5d0e98fb493419218a59efafe15329b7',
        rlpEncodedBlockHeader:              '0xf90236a0b7f9c1d334b61668799fa00bec7fc23514c031df594b1e0db75ac0838dd8e559a01dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d4934794ca31306798b41bc81c43094a1e0462890ce7a673a0557396809edb3fa9b8b60f1ea9288b216ea1edfeb56e2fe4381dbc6e2e831f55a028c14b5507676a07c732ebe020704e9f0d5cf331dc65662a9460bbae06504ac9a0df914c01812b825c0ce905eb06990bb61ac6699a6e5e7c291b215bf8737142e2ba68405f5e100830a8bc08464994141b83bf839a00000000000000000000000000000000000000000000000000000000000000000d594ca31306798b41bc81c43094a1e0462890ce7a673c080a063746963616c2062797a616e74696e65206661756c7420746f6c6572616e6365880000000000000000',
        rlpEncodedBlockHeaderNoRoundNumber: '0xf90237a0b7f9c1d334b61668799fa00bec7fc23514c031df594b1e0db75ac0838dd8e559a01dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d4934794ca31306798b41bc81c43094a1e0462890ce7a673a0557396809edb3fa9b8b60f1ea9288b216ea1edfeb56e2fe4381dbc6e2e831f55a028c14b5507676a07c732ebe020704e9f0d5cf331dc65662a9460bbae06504ac9a0df914c01812b825c0ce905eb06990bb61ac6699a6e5e7c291b215bf8737142e2ba68405f5e100830a8bc08464994141b83cf83aa00000000000000000000000000000000000000000000000000000000000000000d594ca31306798b41bc81c43094a1e0462890ce7a673c080c0a063746963616c2062797a616e74696e65206661756c7420746f6c6572616e6365880000000000000000',
        rlpValidatorSignatures:             '0xf843b841a33acd31b2917e95de43c257b152be28fbbf1564848c8fcc765d3562d7b8420b1df3a07a235ed8dfab0a1f2cff66b12456dc4fc16f6cf6e89a8c4d85db887e2e00',
        chainId: chainId,
      },
      { // QBFT Contract validator selection
        blockHash: '0xf51b0be4d7434a4d5ca7cbb9801cd88f71c08c1e3ce463e6547ff38aee84c9a9',
        rlpEncodedBlockHeader:              '0xf9021fa048ea1e0e2bc652a31f709559a0d46bd424cb07f184a41cc53d5c2f3056fe5d0fa01dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d4934794ca31306798b41bc81c43094a1e0462890ce7a673a0eeee286cf03765bd3365e0b9915999225a4ce26ec5d09824170c159ddbebe82ea031a5fe7e7e7c96bb504d07eb5414a57193647635d7364e73b52f6a4a08c5a474a078050f3b89ccff8df8addbc53b9360bf7c2740c7cf206336fe7d945de8308da5bb08405f5e100830ec43084649947d8a5e4a00000000000000000000000000000000000000000000000000000000000000000c0c080a063746963616c2062797a616e74696e65206661756c7420746f6c6572616e6365880000000000000000',
        rlpEncodedBlockHeaderNoRoundNumber: '0xf90220a048ea1e0e2bc652a31f709559a0d46bd424cb07f184a41cc53d5c2f3056fe5d0fa01dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d4934794ca31306798b41bc81c43094a1e0462890ce7a673a0eeee286cf03765bd3365e0b9915999225a4ce26ec5d09824170c159ddbebe82ea031a5fe7e7e7c96bb504d07eb5414a57193647635d7364e73b52f6a4a08c5a474a078050f3b89ccff8df8addbc53b9360bf7c2740c7cf206336fe7d945de8308da5bb08405f5e100830ec43084649947d8a6e5a00000000000000000000000000000000000000000000000000000000000000000c0c080c0a063746963616c2062797a616e74696e65206661756c7420746f6c6572616e6365880000000000000000',
        rlpValidatorSignatures:             '0xf843b8419867a2792b31131108136c24bec5dc59fc0134a17a825fc63ec9eb2f1a218b8300fcb1039a7564d7e6e321ac47f2a768e1abbf5852602e872dc39394eb9ddb7b01',
        chainId: chainId,
      }
    ];
    for (let t=0; t<testData.length; t++) {
      let test = testData[t]
      const result = await instance.verifyBFTBlockHeader(test.blockHash, test.rlpEncodedBlockHeader, test.rlpEncodedBlockHeaderNoRoundNumber, test.rlpValidatorSignatures, test.chainId)
      assert.equal(result.success, true)
    }
  })

  it("should not be able to verifyBFTBlockHeader if no validators were set", async () => {
    const chainId = 1
    const blockHash = blockHash_hex
    const rlpBlockHeader = Buffer.from(rlpBlockHeader_Base64, 'base64')
    const rlpBlockHeaderExcludingRound = Buffer.from(rlpBlockHeaderExcludingRound_Base64, 'base64')
    const rlpValidatorSignatures = rlpValidatorSignatures_hex

    await ta.reverts(instance.verifyBFTBlockHeader(blockHash, rlpBlockHeader, rlpBlockHeaderExcludingRound, rlpValidatorSignatures, chainId))
  })

  it("should be able to decodeAndVerifyEvent for a block header transfer based proof", async () => {

    const blockchainId = 0
    const validatorList = ['0xca31306798b41bc81c43094a1e0462890ce7a673']
    await instance.setValidatorList(blockchainId, opId(), validatorList)

    await instance.onboardProvingScheme(blockchainId, 2)

    const crosschainControlContract = '0x0000000000000000000000000000000000000000' // not used
    const eventSig = '0x1234' // not used
    const eventData = rlpEncodedReceipt_hex

    const encodedInfo = web3.eth.abi.encodeParameters(
      ['uint256', 'address', 'bytes32', 'bytes'],
      [blockchainId, crosschainControlContract, eventSig, eventData]
    )

    const rlpSiblingNodes = rlpSiblingNodes_hex
    const receiptsRoot = receiptsRoot_hex
    const blockHash = blockHash_hex
    const rlpBlockHeader = Buffer.from(rlpBlockHeader_Base64, 'base64')
    const rlpBlockHeaderExcludingRound = Buffer.from(rlpBlockHeaderExcludingRound_Base64, 'base64')
    const rlpValidatorSignatures = rlpValidatorSignatures_hex

    const signatureOrProof = web3.eth.abi.encodeParameters(
      ['bytes', 'bytes32', 'bytes32', 'bytes', 'bytes', 'bytes'],
      [rlpSiblingNodes, receiptsRoot, blockHash, rlpBlockHeader, rlpBlockHeaderExcludingRound, rlpValidatorSignatures]
    )

    try{
      const result = await instance.decodeAndVerifyEvent(blockchainId, eventSig, encodedInfo, signatureOrProof)

    } catch (err){
      assert.fail('No revert expected:', err)
    }
  })

  it("should be able to onboard parameter handlers for a new callable function", async () => {
    const blockchainId = 0
    const handlers = [{
      'fingerprint': 'net.corda:rniw7B2Mqi7zlkPpKmJ77A==',
      'componentIndex': '0x01',
      'describedSize': '0x02',
      'describedType': 'String',
      'describedPath': '0x06',
      'solidityType': 'string',
      'parser': 'PathParser',
    }]
    const signature = '0x45678000'
    try {
      let result = await instance.setParameterHandlers(blockchainId, signature, handlers);
      assert.equal(result.receipt.status, true)
      let query = await instance.getParameterHandler(blockchainId, signature, 0);
      let decoded = web3.eth.abi.decodeParameters([{
        'ParameterHandler': {
          'fingerprint': 'string',
          'componentIndex': 'uint8',
          'describedSize': 'uint8',
          'describedType': 'string',
          'describedPath': 'bytes',
          'solidityType': 'string',
          'parser': 'string',
        },
      }], query);
      let response = {
        'fingerprint': decoded['0'].fingerprint,
        'componentIndex': decoded['0'].componentIndex,
        'describedSize': decoded['0'].describedSize,
        'describedType': decoded['0'].describedType,
        'describedPath': decoded['0'].describedPath,
        'solidityType': decoded['0'].solidityType,
        'parser': decoded['0'].parser,
      };
      assert.equal(response.fingerprint, handlers[0].fingerprint)
      assert.equal(response.componentIndex, parseInt(handlers[0].componentIndex, 16))
      assert.equal(response.describedSize, parseInt(handlers[0].describedSize, 16))
      assert.equal(response.describedType, handlers[0].describedType)
      assert.equal(response.describedPath, handlers[0].describedPath)
      assert.equal(response.solidityType, handlers[0].solidityType)
      assert.equal(response.parser, handlers[0].parser)
    } catch (err){
      console.log({err})
      assert.fail('No revert expected:', err)
    }
  })

  it("should be able to decodeAndVerifyCordaTransactionSignatures for a 3rd party signature-based proof", async () => {
    const sourceBlockchainId = '0x04'
    const participants = [
      '0xDEC989D1F7D08669F9078624458038BB0BD4857E812F0532EC1EC2655D90B99B',
      '0x5D69FA3D4D9C29280CF6B048C4B7C2E63CFB7CD73FBCD7B9AB6C4CFD2191CFC5',
    ]
    const notary = '0x48A450E7A340C810034F36C6CE78197CBEC20D123858813F7E27A881BDDFDCFA'
    const testData = [{
      id: 'HQLAx 4',
      receiver: 'Tz1IUUxBeC10ZXN0IEJhbmsgQjIsIEw9WnVnLCBDPUNI', // O=HQLAx-test Bank B2, L=Zug, C=CH
      sender: 'Tz1IUUxBeC10ZXN0IEJhbmsgQTEsIEw9WnVnLCBDPUNI', // O=HQLAx-test Bank A1, L=Zug, C=CH
      controlContract: '0xc23cdfef6ec7b1b39c6cb898d7acc71437f167bd',
      sourceBlockchainId: '0x04',
      holdAmount: '0x3039', //12345;
      tradeId: 'DS_3_31-10-2022',
      eventSig: '0x0000000000000000000000000000000000000000000000000000000000000000',
      componentGroup: '0x
      hashAlgorithm: 'SHA-256',
      privacySalt: '0x6567B49F66C97D84FBCCAC5AA0745254794B82893903F87088318A6FA766F30E',
      root: '0xD2480D8C4941734AE85F06C00DBD5F032EB717B24A885860194DD3FAE074CC93',
      witnesses: [
        '0x05604C0719D372D7FE0A14BAC94CD50E41F9A36D58BD6DC460EB00D8DC6DD2F1',
        '0xEE14719330D3952BE4963A27F691D2008549D90B2010042E6966AAF86D29F8CA',
        '0x2CFD8BE96803732F1E709CC88302353BB6D7558D9B7F0F61EC561FAAD234B00F',
        '0xFBED1CDD69BCDAEA7ADF649F91185B5D4945824A5A85E49A0A47E761127DD629',
      ],
      flags: ['0x03', '0x01', '0x01', '0x01'],
      values: ['0x0695A96B2CC4DC6451EA6210EBFA65D71A527E79D77EE6F8A5E5DD4CE6192585'],
      signatures: [{
        'by':   '0x5D69FA3D4D9C29280CF6B048C4B7C2E63CFB7CD73FBCD7B9AB6C4CFD2191CFC5',
        'sigR': '0x8AAF2E8B5BFB177AA0328EE6C372BDCEF2527FD75A2D9B89195CD62165B83553',
        'sigS': '0xAA9779FC1D67DA803910AFCB59A03975C34CB87A91CEC14B5F01A47A5B6A7E09',
        'sigV': '0x0000000000000000000000000000000000000000000000000000000000000000',
        'meta': '0x0000000B00000004D2480D8C4941734AE85F06C00DBD5F032EB717B24A885860194DD3FAE074CC93'
      }, {
        'by':   '0x459F403625FFA7BB6C8A134C6A5948F827C0C183C2895F188931FED9A3534C42',
        'sigR': '0xF6D1DE1086E5CFFD6618C89D33F7BCB7AD42B583D8F9F5101FB8F43B93B4F951',
        'sigS': '0x2E8872D19C8A7F5CFB7820E827E8FEE11F9556BA8D6B372094C22A1489228200',
        'sigV': '0x0000000000000000000000000000000000000000000000000000000000000000',
        'meta': '0x0000000B00000004D2480D8C4941734AE85F06C00DBD5F032EB717B24A885860194DD3FAE074CC93'
      }, {
        'by':   '0xDEC989D1F7D08669F9078624458038BB0BD4857E812F0532EC1EC2655D90B99B',
        'sigR': '0x220B34974980FEFC0F06222E6505BB9A32EBC3233B7EC28659A596ADB3ED4304',
        'sigS': '0xD1714C918D201CC05538CAB715CB68E2141986B626D59F54826B20755B13DD09',
        'sigV': '0x0000000000000000000000000000000000000000000000000000000000000000',
        'meta': '0x0000000B00000004D2480D8C4941734AE85F06C00DBD5F032EB717B24A885860194DD3FAE074CC93'
      }, {
        'by':   '0x48A450E7A340C810034F36C6CE78197CBEC20D123858813F7E27A881BDDFDCFA',
        'sigR': '0x963880C86872D7B986CA608F61A8ECC1E9A5F84EDCE93AA6D64BD1B3A568B687',
        'sigS': '0xC29CFB0F105318F884E858DF5AC8043C402F45ABF9ABF08BDCAE414FD14D8990',
        'sigV': '0x0000000000000000000000000000000000000000000000000000000000000002',
        'meta': '0x0000000B00000003A56831E5E71D2EF41D6B7286D795080FDBF93050D640A8DF0520BF96E592F224'
      }]
    }, {
      id: 'HQLAx 5',
      receiver: 'Tz1IUUxBeC10ZXN0IEJhbmsgQjIsIEw9WnVnLCBDPUNI',
      sender: 'Tz1IUUxBeC10ZXN0IEJhbmsgQTEsIEw9WnVnLCBDPUNI',
      controlContract: '0xc23cdfef6ec7b1b39c6cb898d7acc71437f167bd',
      sourceBlockchainId: '0x04',
      holdAmount: '0x3039', //12345;
      tradeId: '2022-11-02_1',
      eventSig: '0x0000000000000000000000000000000000000000000000000000000000000000',
      componentGroup: '
      hashAlgorithm: 'SHA-256',
      privacySalt: '0xD30CB6D01ED31A436B9AA753C50BBF96E0EA57F0F33FB0CF7B315327CAD60698',
      root: '0xAA7AF2ABDAA2E37785B23AEC36F73A3280FF1326595D0F976532FF8246D8536C',
      witnesses: [
        '0x2F248BBBE40D5BC1EFCF85CAF7EA0C226006CD4CED5461277CC0060F44DAF773',
        '0x363A43F93DB7589F8DE925E322BC669A9AD0FB382E62DB71A19456690E0B55C4',
        '0xE2100C398C86665B6F8579EAA8B6CB371F18722C5BF71E1AD9954793A1495E29',
        '0x87224CB8D9C596CA77CDA32DED2446A9567BC98F5C951086EB20E81BF6DD07D0',
      ],
      flags: ['0x03', '0x01', '0x01', '0x01'],
      values: ['0x60601A16F49D0C6E8BD14415F466F8BD4B0981F58A15BDB06A1FA1E3DC49553F'],
      signatures: [{
        'by'  : '0x5D69FA3D4D9C29280CF6B048C4B7C2E63CFB7CD73FBCD7B9AB6C4CFD2191CFC5',
        'sigR': '0x9A43F0649AFE731FA570AD483AA69A03F5E0502BD5C0FD58831080537E4873FB',
        'sigS': '0x84830BBCD052BA65DB808CD92E6E98F914A6329590A0660419F822C10235FC0B',
        'sigV': '0x0000000000000000000000000000000000000000000000000000000000000000',
        'meta': '0x0000000B00000004AA7AF2ABDAA2E37785B23AEC36F73A3280FF1326595D0F976532FF8246D8536C',
      }, {
        'by'  : '0x459F403625FFA7BB6C8A134C6A5948F827C0C183C2895F188931FED9A3534C42',
        'sigR': '0x10848A754AB513C63EC7D4D1EBB114776AD5F61504E3CF9F48993D9A5499EF4B',
        'sigS': '0xE6A9BBEDE14ABB13457E7BB43B05B37BE58AF40C4764F75778A70DEA9B6A1605',
        'sigV': '0x0000000000000000000000000000000000000000000000000000000000000000',
        'meta': '0x0000000B00000004AA7AF2ABDAA2E37785B23AEC36F73A3280FF1326595D0F976532FF8246D8536C',
      }, {
        'by'  : '0xDEC989D1F7D08669F9078624458038BB0BD4857E812F0532EC1EC2655D90B99B',
        'sigR': '0xE1AAAA7A4E105A3B415282C4C305347337C09A43472C9D151A36E1E0D67A78AF',
        'sigS': '0xD20C96D79E595EC2E3E6AF64E13F98F1E1D7FAC5E9B994F3EAF09AFF5E66890C',
        'sigV': '0x0000000000000000000000000000000000000000000000000000000000000000',
        'meta': '0x0000000B00000004AA7AF2ABDAA2E37785B23AEC36F73A3280FF1326595D0F976532FF8246D8536C',
      }, {
        'by'  : '0x48A450E7A340C810034F36C6CE78197CBEC20D123858813F7E27A881BDDFDCFA',
        'sigR': '0xED1FB3E9662181EFBDC1203ABBF781C663ED078D9F975A40D3E214A5ED1FAC68',
        'sigS': '0x805F0C5A77271133AAE179CE9AC121BDC6B42DD257DE57B346BE41BFF79E0F24',
        'sigV': '0x0000000000000000000000000000000000000000000000000000000000000002',
        'meta': '0x0000000B000000030BAED5ED8B8BA1A10432EF5CB62525868E5569B8E9088993990F69C78047C0DE',
      }]
    }]
    const handlers = [{
      'fingerprint': 'net.corda:rniw7B2Mqi7zlkPpKmJ77A==',
      'componentIndex': '0x01',
      'describedSize': '0x02',
      'describedType': 'String',
      'describedPath': '0x00',
      'solidityType': 'string',
      'parser': 'PathParser',
    }, {
      'fingerprint': 'net.corda:ngdwbt6kRT0l5nn16uf87A==',
      'componentIndex': '0x02',
      'describedSize': '0x06',
      'describedType': 'String',
      'describedPath': '0x00',
      'solidityType': 'string',
      'parser': 'PartyParser',
    }, {
      'fingerprint': 'net.corda:ngdwbt6kRT0l5nn16uf87A==',
      'componentIndex': '0x03',
      'describedSize': '0x06',
      'describedType': 'String',
      'describedPath': '0x00',
      'solidityType': 'string',
      'parser': 'PartyParser',
    }, {
      'fingerprint': '',
      'componentIndex': '0x00',
      'describedSize': '0x00',
      'describedType': '',
      'describedPath': '0x00',
      'solidityType': 'address',
      'parser': 'NoParser',
    }, {
      'fingerprint': '',
      'componentIndex': '0x00',
      'describedSize': '0x00',
      'describedType': '',
      'describedPath': '0x00',
      'solidityType': 'uint256',
      'parser': 'NoParser',
    }, {
      'fingerprint': 'net.corda:EX8RRuprLshI1m51O4333A==',
      'componentIndex': '0x00',
      'describedSize': '0x02',
      'describedType': 'String',
      'describedPath': '0x0101',
      'solidityType': 'uint256',
      'parser': 'PathParser',
    },
    ];

    await instance.addNotary(sourceBlockchainId, notary)
    for (let p=0; p<participants.length; p++) {
      await instance.addParticipant(sourceBlockchainId, participants[p])
    }
    await instance.setParameterHandlers(sourceBlockchainId, "0xc6755b7c", handlers);

    for (let t=0; t<testData.length; t++) {
      const td = testData[t];
      const functionSignature = web3.eth.abi.encodeFunctionSignature('requestFollowLeg(string,string,string,address,uint256,uint256)');
      const functionParameters = web3.eth.abi.encodeParameters(
        ['string', 'string', 'string', 'address', 'uint256', 'uint256'],
        [td.tradeId, td.sender, td.receiver, td.controlContract, td.sourceBlockchainId, td.holdAmount]
      )
      const callParameters = functionSignature + functionParameters.substring(2);
      const eventData = web3.eth.abi.encodeParameters(
        [
          {
            'EventData': {
              'callParameters': 'bytes',
              'hashAlgorithm': 'string',
              'privacySalt': 'bytes32',
              'ComponentData': {
                'groupIndex': 'uint8',
                'internalIndex': 'uint8',
                'encodedBytes': 'bytes',
              },
            },
          },
        ],
        [
          {
            'callParameters': callParameters,
            'hashAlgorithm': td.hashAlgorithm,
            'privacySalt': td.privacySalt,
            'ComponentData': {
              'groupIndex': '0x1',
              'internalIndex': '0x0',
              'encodedBytes': td.componentGroup,
            }
          }
        ]
      )
      const encodedInfo = web3.eth.abi.encodeParameters(
        ['uint256', 'address', 'bytes32', 'bytes'],
        [td.sourceBlockchainId, td.controlContract, td.eventSig, eventData]
      )
      const signatureOrProof = web3.eth.abi.encodeParameters(
        [
          {
            'Signatures': {
              'ProofData': {
                'root': 'bytes32',
                'witnesses': 'bytes32[]',
                'flags': 'uint8[]',
                'values': 'bytes32[]',
              },
              'Signature[]': {
                'by': 'uint256',
                'sigR': 'uint256',
                'sigS': 'uint256',
                'sigV': 'uint256',
                'meta': 'bytes',
              }
            },
          },
        ],
        [
          {
            'ProofData': {
              'root': td.root,
              'witnesses': td.witnesses,
              'flags': td.flags,
              'values': td.values,
            },
            'Signature': td.signatures,
          }
        ]
      )
      try {
        const result = await instance.decodeAndVerifyCordaTransactionSignatures(td.sourceBlockchainId, encodedInfo, signatureOrProof)
        assert.equal(result, true)
      } catch (err) {
        console.log({err})
        assert.fail('No revert expected:', err)
      }
    }
  })

  it("should be able to decodeAndVerifyCordaTransactionSignatures for a Adhara signature-based proof", async () => {
    const sourceBlockchainId = '0x03'
    const participants = [
      '0x5918F8DB2515D38F0074543A3AC2BDB5B18A40DD733EBE42B7F75E388F66F487',
      '0xF415ECD394E50C1752AD515773880CD5F6FB78FA0481ACCDBFA600D05B7E5497',
    ]
    const notary = '0xA8CEA277AA9102D266D04BC3B5C7CB2B2C144EA42937E0128186FC65F256B64F'
    const testData = [{
      id: 'Adhara 2',
      receiver: 'Tz1QYXJ0eUEsIEw9TG9uZG9uLCBDPUdC', // O=PartyA, L=London, C=GB
      sender: 'Tz1QYXJ0eUIsIEw9TmV3IFlvcmssIEM9VVM=', // O=PartyB, L=New York, C=US
      controlContract: '0xc23cdfef6ec7b1b39c6cb898d7acc71437f167bd',
      sourceBlockchainId: '0x03',
      holdAmount: '0xF4240', //1000000;
      tradeId: '475a36b9',
      eventSig: '0x0000000000000000000000000000000000000000000000000000000000000000',
      componentGroup: '0x
      hashAlgorithm: 'SHA-256',
      privacySalt: '0x39F4600478DAF2773F914E7CCC5230E678C4DDDD2E7F51AD43659B1645B89CFF',
      root: '0xA46E9FDC6E6DD4A659E10C1B42619CE078996AB009C8EA82BEDAEDF20C0B939A',
      witnesses: [
        '0x1A3357D5D28F6BD415D64CED45D9975D7992FCEB997DA33227E0242A36792257',
        '0x91BA378A1776FB1CDF669C9E36AA35F1CEFCAF6EF3F9F2D0013937EFC2A747E8',
        '0x868E2E6CB6197ECFF92825120DCDCB923BAA4BCD38DB9C69DFE65FE9673C8DA9',
        '0x1B58857B3475DD6B65F27F85D993C97AAB833B66E8C5270A190A50311CE11CCE',
      ],
      flags: ['0x03', '0x01', '0x01', '0x01'],
      values: ['0x67DE8C49537263FBF81A69FA214DF3903EBA581B63A9D8071DD83270887FC61D'],
      signatures: [{
        'by':   '0x5918F8DB2515D38F0074543A3AC2BDB5B18A40DD733EBE42B7F75E388F66F487',
        'sigR': '0x63787BED632C6F7F963D5D813A582BE50D671EBB1289FCFFCCB1BA319DE212F1',
        'sigS': '0xD1C29ADBABB70F8F617981F9ED7999167695C040C2741C488B0706BE7D9FB90F',
        'sigV': '0x0000000000000000000000000000000000000000000000000000000000000000',
        'meta': '0x0000000A00000004A46E9FDC6E6DD4A659E10C1B42619CE078996AB009C8EA82BEDAEDF20C0B939A'
      }, {
        'by':   '0xF415ECD394E50C1752AD515773880CD5F6FB78FA0481ACCDBFA600D05B7E5497',
        'sigR': '0x14EAE51395AF6D278B5174D701689C3B7CF86030642392C9371CB60E3C907FC4',
        'sigS': '0xDE9FBDE6C01CBDED2F8FBF9E9399E8731F825E10B3D7341ED73C74E0FC96AB08',
        'sigV': '0x0000000000000000000000000000000000000000000000000000000000000000',
        'meta': '0x0000000A00000004A46E9FDC6E6DD4A659E10C1B42619CE078996AB009C8EA82BEDAEDF20C0B939A'
      }, {
        'by':   '0xA8CEA277AA9102D266D04BC3B5C7CB2B2C144EA42937E0128186FC65F256B64F',
        'sigR': '0x4FA8BAAF04CA29502BB4D51A267E64B9657C01E88A14969DC9D30C4C43003B57',
        'sigS': '0x6DE689B91B87ADD6D354013CC7CF454435078B4EF22F4940881090FCD6E2420A',
        'sigV': '0x0000000000000000000000000000000000000000000000000000000000000000',
        'meta': '0x0000000A00000004CEF6CD791B094A69160E3CCACCDA07527EB594F1FE92B9044A3BCC96BA45B440'
      }]
    }]
    const handlers = [{
      'fingerprint': 'net.corda:DldW9yS4tBOze6qv6U4QTA==',
      'componentIndex': '0x00',
      'describedSize': '0x08',
      'describedType': 'String',
      'describedPath': '0x06',
      'solidityType': 'string',
      'parser': 'PathParser',
    }, {
      'fingerprint': 'net.corda:ngdwbt6kRT0l5nn16uf87A==',
      'componentIndex': '0x01',
      'describedSize': '0x06',
      'describedType': 'String',
      'describedPath': '0x00',
      'solidityType': 'string',
      'parser': 'PartyParser',
    }, {
      'fingerprint': 'net.corda:ngdwbt6kRT0l5nn16uf87A==',
      'componentIndex': '0x00',
      'describedSize': '0x06',
      'describedType': 'String',
      'describedPath': '0x00',
      'solidityType': 'string',
      'parser': 'PartyParser',
    }, {
      'fingerprint': '',
      'componentIndex': '0x00',
      'describedSize': '0x00',
      'describedType': '',
      'describedPath': '0x00',
      'solidityType': 'address',
      'parser': 'NoParser',
    }, {
      'fingerprint': '',
      'componentIndex': '0x00',
      'describedSize': '0x00',
      'describedType': '',
      'describedPath': '0x00',
      'solidityType': 'uint256',
      'parser': 'NoParser',
    }, {
      'fingerprint': 'net.corda:DldW9yS4tBOze6qv6U4QTA==',
      'componentIndex': '0x00',
      'describedSize': '0x08',
      'describedType': 'String',
      'describedPath': '0x07',
      'solidityType': 'uint256',
      'parser': 'PathParser',
    }
    ];

    await instance.addNotary(sourceBlockchainId, notary)
    for (let p=0; p<participants.length; p++) {
      await instance.addParticipant(sourceBlockchainId, participants[p])
    }
    await instance.setParameterHandlers(sourceBlockchainId, "0xc6755b7c", handlers);

    for (let t=0; t<testData.length; t++) {
      const td = testData[t];
      const functionSignature = web3.eth.abi.encodeFunctionSignature('requestFollowLeg(string,string,string,address,uint256,uint256)');
      const functionParameters = web3.eth.abi.encodeParameters(
        ['string', 'string', 'string', 'address', 'uint256', 'uint256'],
        [td.tradeId, td.sender, td.receiver, td.controlContract, td.sourceBlockchainId, td.holdAmount]
      )
      const callParameters = functionSignature + functionParameters.substring(2);
      const eventData = web3.eth.abi.encodeParameters(
        [
          {
            'EventData': {
              'callParameters': 'bytes',
              'hashAlgorithm': 'string',
              'privacySalt': 'bytes32',
              'ComponentData': {
                'groupIndex': 'uint8',
                'internalIndex': 'uint8',
                'encodedBytes': 'bytes',
              },
            },
          },
        ],
        [
          {
            'callParameters': callParameters,
            'hashAlgorithm': td.hashAlgorithm,
            'privacySalt': td.privacySalt,
            'ComponentData': {
              'groupIndex': '0x1',
              'internalIndex': '0x0',
              'encodedBytes': td.componentGroup,
            }
          }
        ]
      )
      const encodedInfo = web3.eth.abi.encodeParameters(
        ['uint256', 'address', 'bytes32', 'bytes'],
        [td.sourceBlockchainId, td.controlContract, td.eventSig, eventData]
      )
      const signatureOrProof = web3.eth.abi.encodeParameters(
        [
          {
            'Signatures': {
              'ProofData': {
                'root': 'bytes32',
                'witnesses': 'bytes32[]',
                'flags': 'uint8[]',
                'values': 'bytes32[]',
              },
              'Signature[]': {
                'by': 'uint256',
                'sigR': 'uint256',
                'sigS': 'uint256',
                'sigV': 'uint256',
                'meta': 'bytes',
              }
            },
          },
        ],
        [
          {
            'ProofData': {
              'root': td.root,
              'witnesses': td.witnesses,
              'flags': td.flags,
              'values': td.values,
            },
            'Signature': td.signatures,
          }
        ]
      )
      try {
        const result = await instance.decodeAndVerifyCordaTransactionSignatures(td.sourceBlockchainId, encodedInfo, signatureOrProof)
        assert.equal(result, true)
      } catch (err) {
        console.log({err})
        assert.fail('No revert expected:', err)
      }
    }
  })

  it("should be able to decodeAndVerifyCordaTradeSignatures for a Corda signature-based proof", async () => {
    const notary = '0x6D506B9617E2191E63F8B1C1EDF2125FE2FA7911B3B04D1BBD3E4E4EC456EAB6'
    const contract = '0xc23cdfef6ec7b1b39c6cb898d7acc71437f167bd'
    const blockchainId = '0x00'
    const eventSig = '0x0000000000000000000000000000000000000000000000000000000000000000'
    const callData = '0xc6755b7c00000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000001200000000000000000000000000000000000000000000000000000000000000160000000000000000000000000c23cdfef6ec7b1b39c6cb898d7acc71437f167bd00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004030353066383336316239373465326436633031323234333536623363396462336466323566643332643161326336356666376136346233646163613331613532000000000000000000000000000000000000000000000000000000000000000b464e555355533030555344000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b464e474247423030555344000000000000000000000000000000000000000000'
    const txRoot = '0x050f8361b974e2d6c01224356b3c9db3df25fd32d1a2c65ff7a64b3daca31a52'
    const handlers = [{
      'fingerprint': 'tradeId',
      'componentIndex': '0x00',
      'describedSize': '0x00',
      'describedType': 'bytes32',
      'describedPath': '0x00',
      'solidityType': 'string',
      'parser': 'NoParser',
    }];
    const eventData = web3.eth.abi.encodeParameters([
    {
      'EventData': {
        'callParameters': 'bytes',
        'hashAlgorithm': 'string',
        'privacySalt': 'bytes32',
        'ComponentData': {
          'groupIndex': 'uint8',
          'internalIndex': 'uint8',
          'encodedBytes': 'bytes',
        },
      },
    }],
    [{
      'callParameters': callData,
      'hashAlgorithm': 'SHA-256',
      'privacySalt': '0x0000000000000000000000000000000000000000000000000000000000000000',
      'ComponentData': {
        'groupIndex': '0x00',
        'internalIndex': '0x00',
        'encodedBytes': '0x00',
      }
    }])
    const encodedInfo = web3.eth.abi.encodeParameters(
      ['uint256', 'address', 'bytes32', 'bytes'],
      [blockchainId, contract, eventSig, eventData]
    )
    const signatureOrProof = web3.eth.abi.encodeParameters(
      [
        {
          'Signatures':{
            'ProofData':{
              'root':'bytes32',
              'witnesses':'bytes32[]',
              'flags':'uint8[]',
              'values':'bytes32[]',
            },
            'Signature[]':{
              'by':'uint256',
              'sigR':'uint256',
              'sigS':'uint256',
              'sigV':'uint256',
              'meta':'bytes',
            }
          },
        },
      ],
      [
        {
          'ProofData': {
            'root': txRoot,
            'witnesses': [],
            'flags': [],
            'values': [],
          },
          'Signature':[{
            'by': '0x6D506B9617E2191E63F8B1C1EDF2125FE2FA7911B3B04D1BBD3E4E4EC456EAB6',
            'sigR': '0x954F9847F03B356085FAB1C249A96D63DFE7269599E16D6939B6B140EEF31AFF',
            'sigS': '0x05EA1DBFD9441CA931DD1A1B2302E19CB9BF435C3007C91200EB703751FC9F07',
            'sigV': '0x0000000000000000000000000000000000000000000000000000000000000000',
            'meta': '0x0000000700000004A6477EF88AE34B4CE26ED1EA8BEE10BCEC7F461C9EF92E91B504275744E04C38'
          }],
        }
      ]
    )
    await instance.addNotary(blockchainId, notary)
    await instance.setParameterHandlers(blockchainId, "0xc6755b7c", handlers);
    try {
      const result = await instance.decodeAndVerifyCordaTradeSignatures(blockchainId, encodedInfo, signatureOrProof)
      assert.equal(result, true)
    } catch (err){
      console.log({err})
      assert.fail('No revert expected:', err)
    }
  })
})

const rlpEncodedReceipt_hex = '0xf9028801830c3f5fbf9017df9017a94619b6b5eb17b0f647df6d9fd26c75a12c3c7276ce1a03789f700c0cfbb3b920a6afb90b2907df60e661afa04918dd243a34de3257b71b90140000000000000000000000000bc16f681b917a8d014b1b9dba7c9c44f308c8891000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000c4fba53d4d000000000000000000000000000000000000000000000000000000000000007b00000000000000000000000006c3f482f18711be95adf106afa25cd13897fbe7000000000000000000000000049eb617fba599e3d455da70c6730abc8cc4221d000000000000000000000000886a4c3c763b0d5d5823a3f55e30d03c52d41c4c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000'
const rlpSiblingNodes_hex = '0xf90358f851a005c4fc636786e33469ff65e3623caa538f69d55586e8d7852a52a9cd343c685680808080808080a0ea1269780ad78480884d8d5b33757e02868514e6cc134c4592f308c883615f788080808080808080f87180a0992bf39386c2bbb546d2c453e469cf6929f4dbe43100092e38fed8022726f78aa0093a284c186b85eabaa463959e0b74c342da619d8216f9d07904cce2aa0f3d7aa07740782beb4669a8eecf602d70dbe665ff7dcf1d59928f401d88da7db4dce46f80808080808080808080808080f9028f20b9028bf9028801830c3f5fbf9017df9017a94619b6b5eb17b0f647df6d9fd26c75a12c3c7276ce1a03789f700c0cfbb3b920a6afb90b2907df60e661afa04918dd243a34de3257b71b90140000000000000000000000000bc16f681b917a8d014b1b9dba7c9c44f308c8891000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000c4fba53d4d000000000000000000000000000000000000000000000000000000000000007b00000000000000000000000006c3f482f18711be95adf106afa25cd13897fbe7000000000000000000000000049eb617fba599e3d455da70c6730abc8cc4221d000000000000000000000000886a4c3c763b0d5d5823a3f55e30d03c52d41c4c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000'
const receiptsRoot_hex = '0x4c2ec5eef8896cefdc14a9f421bb4b7b590fec102155e4b210bdac6ec1158823'
const blockHash_hex = '0xbd9c7459897cbdcf3d0202c7fa12510a153eb0d06ceb949fd7c133b6e06bfd82'
const rlpBlockHeader_Base64 = '+QI7oOfMKwkGXtm2gMz3eoprIEeBIjgx3pI7uyaKa2IW4v+loB3MTejex116q4W1Z7bM1BrTEkUblIp0E/ChQv1A1JNHlMoxMGeYtBvIHEMJSh4EYokM56ZzoN5zPo+8QaVroF++ng5nxtO/MQApCLqQPVR/16mebKrtoIy3TX7bLZ2hUWUn+GWctEfOBC6JifaFDJHX1fP383RdoEwuxe74iWzv3BSp9CG7S3tZD+wQIVXkshC9rG7BFYgjuQEAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAiAAAIIAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAACAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAEAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAgAAAAAAAAAAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAGDBIFfhAX14QCDDD9fhGKGWHO4P/g9oAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA1ZTKMTBnmLQbyBxDCUoeBGKJDOemc4CEAAAAAKBjdGljYWwgYnl6YW50aW5lIGZhdWx0IHRvbGVyYW5jZYgAAAAAAAAAAA=='
const rlpBlockHeaderExcludingRound_Base64 = '+QI2oOfMKwkGXtm2gMz3eoprIEeBIjgx3pI7uyaKa2IW4v+loB3MTejex116q4W1Z7bM1BrTEkUblIp0E/ChQv1A1JNHlMoxMGeYtBvIHEMJSh4EYokM56ZzoN5zPo+8QaVroF++ng5nxtO/MQApCLqQPVR/16mebKrtoIy3TX7bLZ2hUWUn+GWctEfOBC6JifaFDJHX1fP383RdoEwuxe74iWzv3BSp9CG7S3tZD+wQIVXkshC9rG7BFYgjuQEAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAiAAAIIAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAACAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAEAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAgAAAAAAAAAAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAGDBIFfhAX14QCDDD9fhGKGWHO4Ovg4oAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA1ZTKMTBnmLQbyBxDCUoeBGKJDOemc4CgY3RpY2FsIGJ5emFudGluZSBmYXVsdCB0b2xlcmFuY2WIAAAAAAAAAAA='
const rlpValidatorSignatures_hex = '0xf843b8410d6292f01075bb80f47aa50d962c9ffb4d1e374a66cfcbc87960bd73be3af9eb30c386da174027e372986fe5a17737248fc9abbf2216abdcbc771a83bd20212300'

